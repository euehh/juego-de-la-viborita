class SnakeGame {
    constructor() {
        this.canvas = document.getElementById('gameCanvas');
        this.ctx = this.canvas.getContext('2d');
        this.controls = new Controls();
        this.highScores = [];
        this.isGameStarted = false;
        this.isPaused = false;

        this.setupCanvas();
        this.loadHighScores();
        this.initGame();

        this.gameLoop = this.gameLoop.bind(this);
        window.addEventListener('resize', this.setupCanvas.bind(this));

        document.getElementById('startGameBtn').addEventListener('click', () => {
            if (!this.isGameStarted) {
                this.startGame();
            }
        });

        document.addEventListener('togglePause', () => {
            if (this.isGameStarted && !this.isGameOver) {
                this.isPaused = !this.isPaused;
                if (!this.isPaused) {
                    this.gameLoop();
                }
            }
        });
        this.achievements = new Achievements(this);
        this.achievements.loadAchievements();
    }

    // Configuraci贸n del canvas
    setupCanvas() {
        const size = Math.min(window.innerWidth - 40, 400);
        this.canvas.width = size;
        this.canvas.height = size;
        this.gridSize = 20;
        this.tileSize = size / this.gridSize;
    }

    // Inicializaci贸n del juego
    initGame() {
        this.snake = [{x: 10, y: 10}];
        this.food = this.generateFood();
        this.score = 0;
        this.gameSpeed = 150;
        this.isGameOver = false;
        this.isPaused = false;
        this.updateScore();
        this.canvas.style.display = 'none';
        document.getElementById('startGameBtn').style.display = 'block';
        document.getElementById('playerName').disabled = false;
    }

    // Dibujo de la serpiente
    drawSnake() {
        this.ctx.fillStyle = '#00ff00';
        this.snake.forEach((segment, index) => {
            this.ctx.fillRect(
                segment.x * this.tileSize,
                segment.y * this.tileSize,
                this.tileSize - 1,
                this.tileSize - 1
            );
        });
    }

    // Dibujo de la comida
    drawFood() {
        this.ctx.fillStyle = '#ff0000';
        this.ctx.fillRect(
            this.food.x * this.tileSize,
            this.food.y * this.tileSize,
            this.tileSize - 1,
            this.tileSize - 1
        );
    }

    // Movimiento de la serpiente
    moveSnake() {
        const direction = this.controls.getDirection();
        const head = {...this.snake[0]};

        switch(direction) {
            case 'up': head.y--; break;
            case 'down': head.y++; break;
            case 'left': head.x--; break;
            case 'right': head.x++; break;
        }

        // Verificar colisi贸n con paredes
        if (head.x < 0 || head.x >= this.gridSize || head.y < 0 || head.y >= this.gridSize) {
            this.gameOver();
            return;
        }

        // Verificar colisi贸n consigo misma
        if (this.snake.some(segment => segment.x === head.x && segment.y === head.y)) {
            this.gameOver();
            return;
        }

        this.snake.unshift(head);

        // Verificar si come comida
        if (head.x === this.food.x && head.y === this.food.y) {
            this.score += 10;
            this.updateScore();
            this.food = this.generateFood();
            this.gameSpeed = Math.max(50, this.gameSpeed - 2);
        } else {
            this.snake.pop();
        }
    }
}